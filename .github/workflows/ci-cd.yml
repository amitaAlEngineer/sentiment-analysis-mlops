name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # schedule:
  #   - cron: '0 0 * * 0'  # Weekly retraining

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    - name: Run tests
      run: |
        pytest --cov=app --cov-report=xml tests/
    - name: Upload coverage
      uses: codecov/codecov-action@v3

  retrain-model:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install datasets
    - name: Retrain model
      run: |
        python -c "from model import SentimentModel; SentimentModel().retrain()"
    - name: Upload retrained model
      uses: actions/upload-artifact@v3
      with:
        name: retrained-model
        path: retrained_model

  build-and-deploy:
    needs: [test, retrain-model]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    - name: Download retrained model
      uses: actions/download-artifact@v3
      with:
        name: retrained-model
        path: retrained_model
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./DockerFile
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/sentiment-analysis:latest
          ${{ secrets.DOCKER_USERNAME }}/sentiment-analysis:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max