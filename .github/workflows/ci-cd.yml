name: Sentiment Analysis CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly retrain on Monday 2AM UTC

env:
  DOCKER_IMAGE: sentiment-analysis
  REGISTRY: ghcr.io  # or docker.io for DockerHub

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-mock

      - name: Run tests
        run: |
          pytest --cov=app --cov-report=xml tests/

      - name: Upload coverage report
        uses: codecov/codecov-action@v3

  retrain-model:
    needs: test
    runs-on: ubuntu-latest-with-gpu  # Use GPU for training
    timeout-minutes: 30
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install CUDA (if GPU available)
      run: |
        sudo apt-get update
        sudo apt-get install -y nvidia-cuda-toolkit
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install datasets torch --extra-index-url https://download.pytorch.org/whl/cu117
    - name: Retrain model
      run: |
        python -c "from model import SentimentModel; SentimentModel().retrain()"
    - name: Upload retrained model
      uses: actions/upload-artifact@v3
      with:
        name: retrained-model
        path: retrained_model
        retention-days: 30

  deploy:
    needs: [test, retrain-model]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/sentiment-analysis:latest
            ${{ secrets.DOCKER_USERNAME }}/sentiment-analysis:${{ github.run_number }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
